# coding:utf-8

import prepare
prepare
from sep.lib import authors
from sep.lib.authors import Authors
from sep.lib.authors import NameIndex

def test_isshortname():
    assert True == authors.isshortname('D', 'David')
    assert True == authors.isshortname('D.', 'David')
    print authors.isshortname('V.O.', 'Van Orman')
    assert True == authors.isshortname('V.O.', 'Van Orman')
def test_Authors():
    authors = Authors()
    authors.add('W.V.O. Quine')
    authors.add('W.V.O. Quine')
    authors.add('W.V. Quine')
    authors.add('Willard Van Orman Quine')
    authors.add('Willard.Van Quine')
    authors.add('W. Quine')
    authors.add('D. Lewis')
    authors.add('D Lewis')
    authors.add('D. Lewis and S. Lewis')
    authors.add('David Lewis')
    authors.add('A. Quinton')
    authors.add('D. Weinstein')
    authors.add('W.L. Weinstein')
    authors.add("Patricia Churchland")
    authors.add("Paul Churchland")
    authors.add("Derek Parfit")
    authors.add("D. Parfit")
    authors.add("D Parfit")
    authors.add("K.L. Walton")
    authors.add("Kendal Walton")
    authors.add("Kendal L. Walton")
    authors.add("K. Walton")
    authors.add("K.  Walton")
 
    assert 'David Lewis' == authors.normalize('D. Lewis')
    assert 'David Lewis' == authors.normalize('David Lewis')
    assert 'Willard Van Orman Quine' == authors.normalize('W.V. Quine')
    assert 'D. Davidson' == authors.normalize('D. Davidson')
    assert 'A. Quinton' == authors.normalize('A. Quinton')
    assert 'D. Weinstein' == authors.normalize('D. Weinstein')
    assert 'Willard Van Orman Quine' == authors.normalize('W. Quine')
    assert 'Paul Churchland' == authors.normalize('Paul Churchland')
    assert 'Derek Parfit' == authors.normalize('D. Parfit')
    assert 'Derek Parfit' == authors.normalize('D Parfit')
    assert 'Derek Parfit' == authors.normalize('Derek Parfit')
    assert 'Kendal L. Walton' == authors.normalize('Kendal Walton')
    assert 'Kendal L. Walton' == authors.normalize('K. Walton')
    assert 'Kendal L. Walton' == authors.normalize('K.L. Walton')
    assert 'Kendal L. Walton' == authors.normalize('K Walton')

def test_Authors2():
    authors = Authors()
    authors.add('K.L. Walton')
    authors.add('Kendall Walton')
    authors.add('Kendall L Walton')
    authors.add('K. Walton')
    authors.add('Bruce Russel')
    authors.add('Bertrand Russel')
    authors.add('Bertrand Russel')
    authors.add('Bertrand Russel')
    authors.add('Bertrand Russel')
    authors.add('Bertrand Russel')
    authors.add('Bruce Russel')
    authors.add('B. Russel')
    assert 'Kendall L. Walton' == authors.normalize('K.L. Walton')
    assert 'Bertrand Russel' == authors.normalize('B. Russel')
    assert 'Bertrand Russel' == authors.normalize('Bertrand Russel')

def test_NameIndex():
    index0 = NameIndex()
    index0.add('David')
    index0.add('D')
    index0.add('D.')
    index0.add('David')
    assert 'David' == index0.get('D.')
    assert 'David' == index0.get('D')
    assert 'David' == index0.get('David')

    index2 = NameIndex()
    index2.add('K.')
    index2.add('Kendal')
    assert "Kendal" == index2.get('K.')
    index3 = NameIndex()
    index3.add('Kendal')
    index3.add('K.')
    assert "Kendal" == index2.get('K.')
